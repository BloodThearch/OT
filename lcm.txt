clc
clear all
cost=[11 20 7 8;21 7 10 12;8 12 18 9];
A=[50 40 70];
B=[30 25 35 40];
if sum(A)==sum(B)
    fprintf('Balanced transportation problem');
else
    fprintf('Unbalanced transportation problem');
if sum(A)<sum(B)
    cost(end+1,:)=zeros(1,size(B,2));
    A(end+1)=sum(B)-sum(A);
elseif sum(B)<sum(A)
    cost(:,end+1)=zeros(1,size(A,2));
    B(end+1)=sum(A)-sum(B);
end
end
A
B
cost
Icost=cost;
X=zeros(size(cost));
[m,n]=size(cost);
bfs=m+n-1;
for i=1:size(cost,1)
    for j=1:size(cost,2)
        hh=min(cost(:));
        [row_index,col_index]=find(hh==cost);
        x11=min(A(row_index),B(col_index));
        [value,index]=max(x11);
        ii=row_index(index);
        jj=col_index(index);
        y11=min(A(ii),B(jj));
        X(ii,jj)=y11;
        A(ii)=A(ii)-y11;
        B(jj)=B(jj)-y11;
        cost(ii,jj)=Inf;
    end
end
cost
X
fprintf('Initial BFS = \n');
totalbfs=length(nonzeros(X));
if totalbfs==bfs
    fprintf('Initial BFS is Non-Degenerate \n');
else
   fprintf('Initial BFS is Degenerate \n'); 
end
InitialCost=sum(sum(Icost.*X));
fprintf('Initial BFS Cost is = %d',InitialCost);